from vkbottle.user import User, Message
from vkbottle.api import API
from rextester_py import rexec_aio
import math
import random

user = User("1a8b582c0be06bb4fcfa390811ac20106ecbecafa4590779b11f9f75573524795bc3619a85e6ad5699ea1")
api = API("1a8b582c0be06bb4fcfa390811ac20106ecbecafa4590779b11f9f75573524795bc3619a85e6ad5699ea1")

@user.on.message_handler(text="–≤—ã–±–µ—Ä–∏ <da> –∏–ª–∏ <net>")
async def wrapper(ans: Message, da, net: str):
    random1 = random.randint(1, 2)
    penis = await user.api.users.get(user_ids=ans.from_id, fields='is_closed')
    if random1 == 1:
        return f"üåø [id{ans.from_id}|{penis[0].first_name}], –Ø –≤—ã–±—Ä–∞–ª: {da}"
    else:
        return f"üåø [id{ans.from_id}|{penis[0].first_name}], –Ø –≤—ã–±—Ä–∞–ª: {net}"

@user.on.message_handler(text="–í—ã–±–µ—Ä–∏ <da> –∏–ª–∏ <net>")
async def wrapper(ans: Message, da, net: str):
    random1 = random.randint(1, 2)
    penis = await user.api.users.get(user_ids=ans.from_id, fields='is_closed')
    if random1 == 1:
        return f"üåø [id{ans.from_id}|{penis[0].first_name}], –Ø –≤—ã–±—Ä–∞–ª: {da}"
    else:
        return f"üåø [id{ans.from_id}|{penis[0].first_name}], –Ø –≤—ã–±—Ä–∞–ª: {net}"
    
@user.on.message_handler(text="–Ω–∞–≥—Ä–∞–¥–∏—Ç—å –º–µ–¥–∞–ª—å—é <da>")
async def wrapper(ans: Message, da: str):
    if ans.from_id == 579018447:
        return f"üåø [id{ans.from_id}|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å], –Ω–∞–≥—Ä–∞–¥–∏–ª [id{ans.reply_message.from_id}|–≤–∞—Å] –º–µ–¥–∞–ª—å—é {da}"
    else:
        return f"üåø –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!"

@user.on.message_handler(text="–ù–∞–≥—Ä–∞–¥–∏—Ç—å –º–µ–¥–∞–ª—å—é <da>")
async def wrapper(ans: Message, da: str):
    if ans.from_id == 579018447:
        return f"üåø [id{ans.from_id}|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å], –Ω–∞–≥—Ä–∞–¥–∏–ª [id{ans.reply_message.from_id}|–≤–∞—Å] –º–µ–¥–∞–ª—å—é {da}"
    else:
        return f"üåø –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!"

@user.on.message_handler(text="<da>+<net>")
async def wrapper(ans: Message, da, net: str):
    c = int(da)+int(net)
    penis = await user.api.users.get(user_ids=ans.from_id, fields='is_closed')
    return f"üåø [id{ans.from_id}|{penis[0].first_name}], –æ—Ç–≤–µ—Ç: {c}"

@user.on.message_handler(text="<da>-<net>")
async def wrapper(ans: Message, da, net: str):
    c = int(da)-int(net)
    penis = await user.api.users.get(user_ids=ans.from_id, fields='is_closed')
    return f"üåø [id{ans.from_id}|{penis[0].first_name}], –æ—Ç–≤–µ—Ç: {c}"

@user.on.message_handler(text="<da>*<net>")
async def wrapper(ans: Message, da, net: str):
    c = int(da)*int(net)
    penis = await user.api.users.get(user_ids=ans.from_id, fields='is_closed')
    return f"üåø [id{ans.from_id}|{penis[0].first_name}], –æ—Ç–≤–µ—Ç: {c}"

@user.on.message_handler(text="<da>/<net>")
async def wrapper(ans: Message, da, net: str):
    c = int(da)/int(net)
    penis = await user.api.users.get(user_ids=ans.from_id, fields='is_closed')
    return f"üåø [id{ans.from_id}|{penis[0].first_name}], –æ—Ç–≤–µ—Ç: {c}"

@user.on.message_handler(text="?–±—Ä–∞–∫")
async def wrapper(ans: Message):
    return f"ü§ó [id{ans.from_id}|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å], –ø–æ—è–≤–∏–ª–∏—Å—å –º–æ–ª–æ–¥–æ –∂—ë–Ω—ã [id{ans.reply_message.from_id}|–≤–∞–º] =)"
    f = open("text.txt", "r")
    f.write(ans.from_id)
    b = open("text2.txt", "r")
    b.write(ans.reply_message.from_id)

@user.on.message_handler(text="?–±—Ä–∞–∫–∏")
async def wrapper(ans: Message):
    f = open("text.txt", "r")
    b = open("text2.txt", "r")
    return f"üíû –ë—Ä–∞–∫–∏ –±–µ—Å–µ–¥—ã\n\n1.[id{f.read()}|–õ—é–±–æ–≤—å] üíö [id{b.read()}|–ú–æ—Ä–∫–æ–≤—å]"

@user.on.message_handler(text="–û–±–Ω—è—Ç—å")
async def wrapper(ans: Message):
    penis = await user.api.users.get(user_ids=ans.from_id, fields='is_closed')
    return f"ü§ó [id{ans.from_id}|{penis[0].first_name}] –æ–±–Ω—è–ª [{da}|–≤–∞—Å] =)"

@user.on.message_handler(text="–æ–±–Ω—è—Ç—å")
async def wrapper(ans: Message):
    penis = await user.api.users.get(user_ids=ans.from_id, fields='is_closed')
    return f"ü§ó [id{ans.from_id}|{penis[0].first_name}] –æ–±–Ω—è–ª [{da}|–≤–∞—Å] =)"

@user.on.message_handler(text="/me <da>")
async def wrapper(ans: Message, da: str):
    return f"[id{ans.from_id}|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å], {da}"

@user.on.message_handler(text="—á–∞—Ç –∞–π–¥–∏")
async def wrapper(ans: Message):
    if ans.from_id == 579018447:
        return f"{ans.chat_id}"

@user.on.message_handler(text="b = <da>")
async def wrapper(ans: Message, da: str):
    if ans.from_id == 579018447:
        f = open('text.txt')
        f.write(da)
        return f"b = da"

@user.on.message_handler(text="–∫—Ç–æ")
async def wrapper(ans: Message):
    penis = await user.api.users.get(user_ids=ans.reply_message.from_id, fields='is_closed')
    friends = await user.api.friends.get(user_id=ans.reply_message.from_id)
    return f"üåø –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —ç—Ç–æ [id{ans.reply_message.from_id}|{penis[0].first_name} {penis[0].last_name}]\n\nü•≥ –í —Å–µ—Ç–∏: {penis[0].is_closed}\nüòé –ö–æ–ª-–≤–æ –¥—Ä—É–∑–µ–π: {friends.count}"

@user.on.message_handler(text="—Å—Ç–∏–∫–µ—Ä—ã")
async def wrapper(ans: Message):
    penis = await user.api.users.get(user_ids=ans.from_id, fields='is_closed')
    all_stickers = await api.request('gifts.getCatalog', {'user_id': ans.reply_message.from_id})
    stickers = [f"üåø ID: {i['gift']['stickers_product_id']} - –ù–∞–∑–≤–∞–Ω–∏–µ: {i['sticker_pack']['title']}"
    for i in all_stickers[1]['items'] if 'disabled' in i]
    stickers2 = '\n'.join(stickers)
    return f"ü§ë [id{ans.from_id}|{penis[0].first_name}], –µ–≥–æ —Å—Ç–∏–∫–µ—Ä—ã:\n\n{stickers2}"

@user.on.message_handler(text="–∫–æ—Ä–µ–Ω—å <da>")
async def wrapper(ans: Message, da: str):
    penis = await user.api.users.get(user_ids=ans.from_id, fields='is_closed')
    return f"üåø [id{ans.from_id}|{penis[0].first_name}], –æ—Ç–≤–µ—Ç: {math.sqrt(int(da))}"

@user.on.message_handler(text="–ö–æ—Ä–µ–Ω—å <da>")
async def wrapper(ans: Message, da: str):
    penis = await user.api.users.get(user_ids=ans.from_id, fields='is_closed')
    return f"üåø [id{ans.from_id}|{penis[0].first_name}], –æ—Ç–≤–µ—Ç: {math.sqrt(int(da))}"

@user.on.message_handler(text="‚àö<da>")
async def wrapper(ans: Message, da: str):
    penis = await user.api.users.get(user_ids=ans.from_id, fields='is_closed')
    return f"üåø [id{ans.from_id}|{penis[0].first_name}], –æ—Ç–≤–µ—Ç: {math.sqrt(int(da))}"

@user.on.message_handler(text="py <da>")
async def wrapper(ans: Message, da: str):
    penis = await user.api.users.get(user_ids=ans.from_id, fields='is_closed')
    bd = da.replace("~", "    ")
    rex = await rexec_aio("python 3", f"{bd}", None)
    return f"üåø [id{ans.from_id}|{penis[0].first_name}], –≤—ã–≤–æ–¥: {rex.results}"

@user.on.message_handler(text="<da>")
async def wrapper(ans: Message, da: str):
    a = random.randint(1, 15)
    f = open('text.txt')
    b = f.read()
    if b == 0:
        print("h") 
    else:
        if ans.chat_id == b:
            if a == 1:
                return "—Ç—ã —á–µ –∞—Ö—É–µ–ª–∞ —á–µ–∫–Ω–∏ –±–∞–∑–∞—Ä –¥–∞—É–Ω"
            if a == 2:
                return "–ø–æ–¥–≤–µ–¥—ë–º –∏—Ç–æ–≥–∏ —Ç—ã –ª–æ—Ö —Ç—É–ø–æ–π –∏ —É —Ç–µ–±—è –º–∞—Ç—å –∑–¥–æ—Ö–ª–∞, —Ç—ã –ø–∏–∑–¥–∏—à—å –≤—Å–µ–≥–¥–∞ –∏ –≤—ã–µ–±—ã–≤–∞–µ—à—å—Å—è —Å–≤–æ–∏–º–∏ 5–º–º, —Ç–∞–∫ —á—Ç–æ —Å–æ—Å–∏ –º–æ–π –ø–æ–ª –º–µ—Ç—Ä–æ–≤—ã–π —Å—Ç–æ–ª–±, —Ö—É–π–ª–æ –µ–±–∞–Ω–Ω–æ–µ!" 
            if a == 3:
                return "—Ç—ã –ª–æ—Ö —Ç—É–ø–æ–π —á–µ–∫–Ω–∏ –º–∞—Ç—å –∏–º–±–∏—Ü—ã–ª"
            if a == 4:
                return "—Ç—ã —á–µ –∏–º–±–∏—Ü—ã–ª –Ω–∞ –∑–∞–±–∏–≤ –≤ 9 —É—Ç—Ä–∞ —Ö—É–π–ª–æ –ø–æ–Ω—è–ª –ø–∏–∑–¥–∞ —Ç–µ–±–µ –ø–∏–¥–æ—Ä–∞—Å–∏–Ω–∞!"
            if a == 5:
                return "—Å–æ–±–æ–ª–µ–∑–Ω—É—é —Ç–≤–æ–∏–º–∏ 5–º–º"
            if a == 6:
                return "–ø–æ–º–Ω–∏—à—å —è —Ç–≤–æ–µ–π –º–∞—Ç–µ—Ä–∏ –¥–∏–ª–¥–æ –ø–æ–¥–∞—Ä–∏–ª –∏ –æ–Ω–∞ —Ç–µ–±—è –∏–º –∏–∑–±–∏–ª–∞?"
            if a == 7:
                return "/me –æ—Ç–ø–∏–∑–¥–∏–ª —Ç–≤–æ–µ–≥–æ –∫–æ—Ç–∞ –∏ —É–±–∏–ª —Ç–≤–æ—é –º–∞—Ç—å"
            if a == 8:
                return "—Ç–≤–æ–π –æ—Ç–µ—Ü —Ç–µ–±—è –æ–±–æ—Å—Å–∞–ª, –≤—ã–µ–±–∞–ª –∏ —É—à–µ–ª –∏–∑ —Å–µ–º—å–∏, –≤—Å–µ —ç—Ç–æ –Ω–µ —Å–Ω–∏–º–∞—è —à—Ç–∞–Ω–æ–≤" 
            if a == 9:
                return "—É —Ç–≤–æ–µ–≥–æ –æ—Ç—Ü–∞ –ø–æ–ª —Å–∞–Ω—Ç–∏–º–Ω—Ç—Ä–∞ –ø–æ —ç—Ç–æ–º—É —Ç–≤–æ—è –º–∞—Ç—å –ª—è–≥—É—à–∫–∞, —Å—É–∫–∞ –æ–Ω–∞ –∫—Ä–∏—á–∞–ª–∞ –æ—Ç –±–æ–ª–∏ –º–æ–µ–≥–æ –ø–æ–ª –º–µ—Ç—Ä–æ–≤–æ–≥–æ —Å—Ç–æ–ª–±–∞"
            if a == 10:
                return "—á—Ç–æ-—á—Ç–æ? —á—Ç–æ —Ç—ã —Ç–∞–º –ø–∏—â–∏–∂ –º—Ä–∞–∑—å —è –±–ª—è—Ç—å —Ç–∞–∫–∏—Ö –∫–∞–∫ —Ç—ã –ø–æ 10 —à—Ç—É–∫ –≤ –¥–µ–Ω—å –æ–±–æ—Å—Å—ã–≤–∞—é –∞ —Ç—ã –µ—â—ë –≤–æ–∑–Ω–∏–∫–∞–µ—à—å —Ö—É–µ–ø—É—Ç–∞–ª–æ, –µ—Å–ª–∏ —Ç–µ–±–µ –Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è –º–æ–π —Ö—É–π –Ω–µ —Å–æ—Å–∏ –µ—Ç–æ –∂–µ —Ç—ã –∫—Ä–∏—á–∞–ª–∞ —ç–π —ç–π –¥—è–¥—è –¥–∞–π—Ç–µ —Ö—É–π –ø–æ—Å–æ—Å–∞—Ç—å –∞ —è –≤–∞–º —Å–æ—Ç–∫—É –¥–∞–º –±–ª—è—Ç—å —Ç–æ–∫–æ –ø—Ä–∏–∫–æ–ª –≤ —Ç–æ–º —á–æ —Å–æ—Ç–∫—É —è —Ç–µ–±–µ –Ω–µ –æ—Ç–¥–∞–º —Ç–∞–∫—á—Ç–æ —Ç—ã –ø–æ–π–¥–µ—à—å –ø—Ä–æ—Å—Ç–æ –Ω–∞—Ö—É–π –ø–æ—ç—Ç–æ–º—É —Å–æ—Å–∏ –ø–æ–∫–∞ –µ—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤—ã–±–∏—Ç—å—Å—è –≤ –ª—é–¥–∏"
            if a == 11:
                return f"- –∑–Ω–∞–µ—à—å –ø–æ—á–µ–º—É —É —Ç–≤–æ–µ–π –º–∞–º—ã –≤—Å–µ–≥–¥–∞ –∑—É–±—ã —Å–≤–µ–∂–∏–µ?\n- –ø–æ—Ç–æ–º—É —á—Ç–æ –º–æ–π —Ö—É–π —Å–æ –≤–∫—É—Å–æ–º —Ç–∏–∫ —Ç–∞–∫–∞"
            if a == 12:
                return "—É–≥–∞–¥–∞–π –∫—Ç–æ —Å–µ–≥–æ–¥–Ω—è –∏–¥–µ—Ç –≤ –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä —Å —Ç–≤–æ–µ–π –º–∞—Ç–µ—Ä—å—é"
            if a == 13:
                return "–∏–º–±–∏—Ü–∏–ª –µ–±–∞–Ω—ã–π —Ö–≤–∞—Ç–∏—Ç —Ö—É–∏ —Å–æ—Å–∞—Ç—å –≤–Ω–∞—Ç—É—Ä–µ"
            if a == 14:
                return "–Ω–∞—É—á–∏ —Å–≤–æ—é –º–∞—Ç—å –Ω–µ —Å–æ—Å–∞—Ç—å —Ö—É–π, –µ—Å–ª–∏ —Å–∞–º —É–º–µ–µ—à—å"
            if a == 15:
                return "—Ç–µ–±–µ –º—É–¥–æ–ø–∏–∑–¥—é–∫—É –Ω–µ —Ä–∞–∑ –±—ã–ª–æ —Å–∫–∞–∑–∞–Ω–æ –Ω–µ —Å–æ—Å–∞—Ç—å —Ö—É–π"
            if a == 16:
                return "–º–æ—Ä–≥–µ–Ω—à—Ç–µ—Ä–Ω —Ç–æ–ø"
            if a == 17:
                return "–±—Ä–∞–≤–ª —Å—Ç–∞—Ä—Å —Ç–æ–ø"
            if a == 18:
                return "–∞–Ω–∏–º–µ –≥–æ–≤–Ω–æ, –ê–ª–ª–∞—Ö —Ç–æ–ø"
 
@user.on.message_handler(text="–û–±–Ω—è—Ç—å @<da>")
async def wrapper(ans: Message, da: str):
    return f"ü§ó [id{ans.from_id}|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å], –æ–±–Ω—è–ª [{da}|–≤–∞—Å] =)"

@user.on.message_handler(text="—Ç—Ä–∞—Ö–Ω—É—Ç—å")
async def wrapper(ans: Message):
    return f"ü§ó [id{ans.from_id}|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å], —Ç—Ä–∞—Ö–Ω—É–ª [id{ans.reply_message.from_id}|–≤–∞—Å] =)"

@user.on.message_handler(text="–¢—Ä–∞—Ö–Ω—É—Ç—å")
async def wrapper(ans: Message):
    return f"ü§ó [id{ans.from_id}|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å], —Ç—Ä–∞—Ö–Ω—É–ª [id{ans.reply_message.from_id}|–≤–∞—Å] =)"

@user.on.message_handler(text="–∏–Ω—Ñ–∞ <da>")
async def wrapper(ans: Message, da: str):
    random1 = random.randint(1, 100)
    return f"ü§ó [id{ans.from_id}|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å], —è –¥—É–º–∞—é —á—Ç–æ {da} - {random1}%"

@user.on.message_handler(text="–ò–Ω—Ñ–∞ <da>")
async def wrapper(ans: Message, da: str):
    random1 = random.randint(1, 100)
    return f"ü§ó [id{ans.from_id}|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å], —è –¥—É–º–∞—é —á—Ç–æ {da} - {random1}%"

@user.on.message_handler(text="–±–æ—Ç <da>")
async def wrapper(ans: Message, da: str):
    return f"ü§ó [id{ans.from_id}|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å], –ø—Ä–∏–≤–µ—Ç"

@user.on.message_handler(text="–ë–æ—Ç <da>")
async def wrapper(ans: Message, da: str):
    return f"ü§ó [id{ans.from_id}|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å], –ø—Ä–∏–≤–µ—Ç"

@user.on.message_handler(text="–ò–≤–∞–Ω <da>")
async def wrapper(ans: Message, da: str):
    return f"ü§ó [id{ans.from_id}|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å], –ø—Ä–∏–≤–µ—Ç"

@user.on.message_handler(text="<da> –∏–≤–∞–Ω")
async def wrapper(ans: Message, da: str):
    return f"ü§ó [id{ans.from_id}|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å], –ø—Ä–∏–≤–µ—Ç"

@user.on.message_handler(text="<da> –ò–≤–∞–Ω")
async def wrapper(ans: Message, da: str):
    return f"ü§ó [id{ans.from_id}|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å], –ø—Ä–∏–≤–µ—Ç"

@user.on.message_handler(text="<da> –±–æ—Ç")
async def wrapper(ans: Message, da: str):
    return f"ü§ó [id{ans.from_id}|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å], –ø—Ä–∏–≤–µ—Ç"

@user.on.message_handler(text="<da> –ë–æ—Ç")
async def wrapper(ans: Message, da: str):
    return f"ü§ó [id{ans.from_id}|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å], –ø—Ä–∏–≤–µ—Ç"

@user.on.message_handler(text="–ö–æ–º–∞–Ω–¥—ã")
async def wrapper(ans: Message, da: str):
    return f"ü§ó [id{ans.from_id}|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å], –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ —ç—Ç–æ–π —Å—Å—ã–ª–∫–µ:\n\nvk.com/@579018447-komandy"

@user.on.message_handler(text="<gay>")
async def wrapper(ans: Message, gay: str):
    random1 = random.randint(1, 5)
    random5 = random.randint(1, 100)
    asa = 0
    if random5 == 100:
        asa = 100
    if asa == 100:
        if random1 == 1:
            return "- –ü–æ—á–µ–º—É –≤–∞—à–∞ –∫–æ—à–∫–∞ –ø–æ —Å—É–±–±–æ—Ç–∞–º –æ—Ä–µ—Ç?\n- –ê –º—ã –µ–µ –º–æ–µ–º.\n- –ú—ã —Å–≤–æ—é —Ç–æ–∂–µ –º–æ–µ–º –ø–æ —Å—É–±–±–æ—Ç–∞–º...\n- –ê –≤—ã –≤—ã–∂–∏–º–∞—Ç—å –ø—Ä–æ–±–æ–≤–∞–ª–∏?"
            asa = 0
        if random1 == 2:
            return "- –ü–æ—á–µ–º—É –≤ –º—É–ª—å—Ç—Ñ–∏–ª—å–º–µ –ú–∞—à–∞ –∏ –ú–µ–¥–≤–µ–¥—å –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç —Ä–æ–¥–∏—Ç–µ–ª–µ–π –ú–∞—à–∏?\n- –û–Ω–∏, –Ω–∞–≤–µ—Ä–Ω–æ–µ, —É–∂–µ –≤ –¥—É—Ä–¥–æ–º–µ!"
            asa = 0
        if random1 == 3:
            return "–ù–µ—Ç—Ä–µ–∑–≤—ã–π –∂–∏—Ç–µ–ª—å –£—Ö—Ä—é–ø–∏–Ω—Å–∫–∞ –∑–∞–º–∞—Ö–Ω—É–ª—Å—è –Ω–∞ —Å–≤—è—Ç–æ–µ, –Ω–æ –±–∞—Ç—é—à–∫–∞ —É–¥–∞—Ä–∏–ª —Ä–∞–Ω—å—à–µ."
            asa = 0
        if random1 == 4:
            return "–†–µ–±—è—Ç–∞, —Å–¥–µ–ª–∞–π—Ç–µ –º–µ–Ω—è –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –∑–∞–º–æ–º –º–∏–Ω–∏—Å—Ç—Ä–∞ —á–µ–≥–æ —É–≥–æ–¥–Ω–æ, –º–Ω–µ —á–∏—Å—Ç–æ –∏–ø–æ—Ç–µ–∫—É –∑–∞–∫—Ä—ã—Ç—å –∏ –≤—Å—ë, —è –¥–∞–ª—å—à–µ —Å–∞–º —É–≤–æ–ª—é—Å—å, –æ–±–µ—â–∞—é. –Ø –≤—Å—ë –ø–æ—Å—á–∏—Ç–∞–ª, —á—Ç–æ–±—ã –∑–∞–∫—Ä—ã—Ç—å –∏–ø–æ—Ç–µ–∫—É –º–Ω–µ –Ω–∞ —Ç–∞–∫–æ–º –ø–æ—Å—Ç—É –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è 17 —Å–µ–∫—É–Ω–¥."
            asa = 0
        if random1 == 5:
            return "–î–æ—Å—Ç–∞—é –∏–∑ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–∞ –¥–≤—É—Ö–ª–∏—Ç—Ä–æ–≤—É—é –∫–æ–ª—É, –¥–∏—Ä–µ–∫—Ç–æ—Ä: –æ, –∏ –º–Ω–µ –Ω–∞–ª–µ–π!... –∏ –∫–∞–∫ –æ–±—ä—è—Å–Ω–∏—Ç—å, —á—Ç–æ –æ–Ω–∞ —Å –≤–∏—Å–∫–∞—Ä–µ–º —É–∂–µ?"
            asa = 0
    
user.run_polling()
