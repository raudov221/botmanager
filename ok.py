from vkbottle.user import User, Message
from vkbottle.user import *
import random
import json

user = User("fa7173fc604f10a6664772707231425811ef9d66bd758357e6d0b799cbbed4261836b049220164c0d5da1")

def reg(ans):
    data = json.load(open("data.json", "r"))
    if str(ans.from_id) in data["user"]:
        pass
    else:
        data["user"][str(ans.from_id)] = "reg"
        data["status"][str(ans.from_id)] = "–Ω–µ—Ç—É"
        data["id"][str(ans.from_id)] = str(len(data["user"]))
        json.dump(data, open("data.json", "w"))

@user.on.message_handler(text="–≤—ã–±–µ—Ä–∏ <da> –∏–ª–∏ <net>")
async def wrapper(ans: Message, da, net: str):
    random1 = random.randint(1, 2)
    if random1 == 1:
        return f"üåø [id{ans.from_id}|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å], –Ø –≤—ã–±—Ä–∞–ª: {da}"
    else:
        return f"üåø [id{ans.from_id}|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å], –Ø –≤—ã–±—Ä–∞–ª: {net}"

@user.on.message_handler(text="–í—ã–±–µ—Ä–∏ <da> –∏–ª–∏ <net>")
async def wrapper(ans: Message, da, net: str):
    random1 = random.randint(1, 2)
    if random1 == 1:
        return f"üåø [id{ans.from_id}|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å], –Ø –≤—ã–±—Ä–∞–ª: {da}"
    else:
        return f"üåø [id{ans.from_id}|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å], –Ø –≤—ã–±—Ä–∞–ª: {net}"

@user.on.message_handler(text="<gay>")
async def wrapper(ans: Message, gay: str):
    random1 = random.randint(1, 5)
    random5 = random.randint(1, 100)
    asa = 0
    if random5 == 100:
        asa = 100
    if asa == 100:
        if random1 == 1:
            return "- –ü–æ—á–µ–º—É –≤–∞—à–∞ –∫–æ—à–∫–∞ –ø–æ —Å—É–±–±–æ—Ç–∞–º –æ—Ä–µ—Ç?\n- –ê –º—ã –µ–µ –º–æ–µ–º.\n- –ú—ã —Å–≤–æ—é —Ç–æ–∂–µ –º–æ–µ–º –ø–æ —Å—É–±–±–æ—Ç–∞–º...\n- –ê –≤—ã –≤—ã–∂–∏–º–∞—Ç—å –ø—Ä–æ–±–æ–≤–∞–ª–∏?"
            asa = 0
        if random1 == 2:
            return "- –ü–æ—á–µ–º—É –≤ –º—É–ª—å—Ç—Ñ–∏–ª—å–º–µ –ú–∞—à–∞ –∏ –ú–µ–¥–≤–µ–¥—å –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç —Ä–æ–¥–∏—Ç–µ–ª–µ–π –ú–∞—à–∏?\n- –û–Ω–∏, –Ω–∞–≤–µ—Ä–Ω–æ–µ, —É–∂–µ –≤ –¥—É—Ä–¥–æ–º–µ!"
            asa = 0
        if random1 == 3:
            return "–ù–µ—Ç—Ä–µ–∑–≤—ã–π –∂–∏—Ç–µ–ª—å –£—Ö—Ä—é–ø–∏–Ω—Å–∫–∞ –∑–∞–º–∞—Ö–Ω—É–ª—Å—è –Ω–∞ —Å–≤—è—Ç–æ–µ, –Ω–æ –±–∞—Ç—é—à–∫–∞ —É–¥–∞—Ä–∏–ª —Ä–∞–Ω—å—à–µ."
            asa = 0
        if random1 == 4:
            return "–†–µ–±—è—Ç–∞, —Å–¥–µ–ª–∞–π—Ç–µ –º–µ–Ω—è –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –∑–∞–º–æ–º –º–∏–Ω–∏—Å—Ç—Ä–∞ —á–µ–≥–æ —É–≥–æ–¥–Ω–æ, –º–Ω–µ —á–∏—Å—Ç–æ –∏–ø–æ—Ç–µ–∫—É –∑–∞–∫—Ä—ã—Ç—å –∏ –≤—Å—ë, —è –¥–∞–ª—å—à–µ —Å–∞–º —É–≤–æ–ª—é—Å—å, –æ–±–µ—â–∞—é. –Ø –≤—Å—ë –ø–æ—Å—á–∏—Ç–∞–ª, —á—Ç–æ–±—ã –∑–∞–∫—Ä—ã—Ç—å –∏–ø–æ—Ç–µ–∫—É –º–Ω–µ –Ω–∞ —Ç–∞–∫–æ–º –ø–æ—Å—Ç—É –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è 17 —Å–µ–∫—É–Ω–¥."
            asa = 0
        if random1 == 5:
            return "–î–æ—Å—Ç–∞—é –∏–∑ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–∞ –¥–≤—É—Ö–ª–∏—Ç—Ä–æ–≤—É—é –∫–æ–ª—É, –¥–∏—Ä–µ–∫—Ç–æ—Ä: –æ, –∏ –º–Ω–µ –Ω–∞–ª–µ–π!... –∏ –∫–∞–∫ –æ–±—ä—è—Å–Ω–∏—Ç—å, —á—Ç–æ –æ–Ω–∞ —Å –≤–∏—Å–∫–∞—Ä–µ–º —É–∂–µ?"
            asa = 0

@user.on.message_handler(text="<gay> + <gay2>")
async def wrapper(ans: Message, gay, gay2: str):
    c = int(gay) + int(gay2)
    return f"üåø [id{ans.from_id}|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å], –±—É–¥–µ—Ç: {c}"
        
@user.on.message_handler(text="<gay> - <gay2>")
async def wrapper(ans: Message, gay, gay2: str):
    c = int(gay) - int(gay2)
    return f"üåø [id{ans.from_id}|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å], –±—É–¥–µ—Ç: {c}"

@user.on.message_handler(text="<gay> * <gay2>")
async def wrapper(ans: Message, gay, gay2: str):
    c = int(gay) * int(gay2)
    return f"üåø [id{ans.from_id}|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å], –±—É–¥–µ—Ç: {c}"
    
@user.on.message_handler(text="–Ω–∞–≥—Ä–∞–¥–∏—Ç—å –º–µ–¥–∞–ª—å—é <gay>")
async def wrapper(ans: Message, gay: str):
    if reply.from_id == "":
        return "–∫–æ–≥–æ –Ω–∞–≥—Ä–∞–∂–¥–∞—Ç—å?"
    else:
        return f"üåø [id{ans.from_id}|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å], –Ω–∞–≥—Ä–∞–¥–∏–ª [id{reply.from_id}|–≤–∞—Å] –º–µ–¥–∞–ª—å—é {gay}"
    
user.run_polling()
